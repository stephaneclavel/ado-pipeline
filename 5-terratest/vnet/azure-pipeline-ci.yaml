# Azure DevOps pipeline for PR on Terraform Code

variables:
- group: variable-group

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - 5-terratest/vnet

stages:

  # Run Terratest
- stage: Terratest
  jobs:
  - job: terratest
    pool:
      vmImage: ubuntu-20.04
    steps:

    # Download Azure Key Vault secrets
    - task: AzureKeyVault@1
      inputs:
        ConnectedServiceName: $(service_name)
        keyVaultName: $(key_vault_name)
        secretsFilter: '*'
        runAsPreJob: false # Azure DevOps Services only

    # Install Terratest Log Parser
    - bash: |
        # Use curl to download the binary
        curl --location --silent --fail --show-error -o terratest_log_parser https://github.com/gruntwork-io/terratest/releases/download/v0.13.13/terratest_log_parser_linux_amd64
        # Make the downloaded binary executable
        chmod +x terratest_log_parser
        # Finally, we place the downloaded binary to a place in the PATH
        sudo mv terratest_log_parser /usr/local/bin
        # Display go version

    # Run Terratest
    - bash: |
        cd $(System.DefaultWorkingDirectory)/5-terratest/vnet/test
        go mod init stephaneclavel/ado-pipeline
        echo "ARM_SUBSCRIPTION_ID" $ARM_SUBSCRIPTION_ID
        go test -v -timeout 30m | tee test_output.log
        terratest_log_parser -testlog test_output.log -outputdir test_output
      env:
        ARM_SAS_TOKEN: $(sas-token)
        ARM_CLIENT_ID: $(az-client-id)
        ARM_CLIENT_SECRET: $(az-client-secret)
        ARM_SUBSCRIPTION_ID: $(az-subscription)
        ARM_TENANT_ID: $(az-tenant)

    # Publish test results    
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
        testResultsFiles: '**/report.xml'
        failTaskOnFailedTests: true